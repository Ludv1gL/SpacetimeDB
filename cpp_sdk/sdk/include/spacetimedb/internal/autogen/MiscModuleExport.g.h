// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb codegen.

#pragma once

#include <cstdint>
#include <string>
#include <vector>
#include <optional>
#include <memory>
#include "spacetimedb/bsatn/bsatn.h"

namespace SpacetimeDb::Internal {

class MiscModuleExport {
public:
    enum class Tag {
        TypeAlias = 0,
    };

private:
    Tag tag_;
    // TODO: Implement variant storage

public:
    Tag get_tag() const { return tag_; }

    // BSATN serialization support
    void bsatn_serialize(SpacetimeDb::bsatn::Writer& writer) const;
    void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader);
};
} // namespace SpacetimeDb::Internal
// Type registration macro
#define SPACETIMEDB_REGISTER_TYPE_MiscModuleExport \
    namespace spacetimedb { \
    namespace detail { \
    template<> \
    struct TypeRegistrar<SpacetimeDb::Internal::MiscModuleExport> { \
        static AlgebraicTypeRef register_type(TypeContext& ctx) { \
            return ctx.add(AlgebraicType::Sum(std::make_unique<SumType>(std::vector<SumType::Variant>{
    {"TypeAlias", AlgebraicType::Ref(17)}
}))); \
        } \
    }; \
    } /* namespace detail */ \
    } /* namespace spacetimedb */

