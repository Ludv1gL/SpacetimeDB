In file included from sdk_test.cpp:1:
In file included from .\sdk_test.h:5:
../../../sdk/include\spacetimedb/macros.h:116:9: warning: DEBUG_MACRO: SPACETIMEDB_XX_SERIALIZE_FIELD is defined before SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS [-W#pragma-messages]
  116 | #pragma message "DEBUG_MACRO: SPACETIMEDB_XX_SERIALIZE_FIELD is defined before SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS"
      |         ^
../../../sdk/include\spacetimedb/macros.h:121:9: warning: DEBUG_MACRO: SPACETIMEDB_XX_DESERIALIZE_FIELD is defined before SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS [-W#pragma-messages]
  121 | #pragma message "DEBUG_MACRO: SPACETIMEDB_XX_DESERIALIZE_FIELD is defined before SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS"
      |         ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:74:5: error: no function template matches function template specialization 'deserialize'
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:289:47: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |                 inline _actual_cpp_type_name_ deserialize<_actual_cpp_type_name_>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: no matching member function for call to 'write_optional'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint8_t' (aka 'const unsigned char')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: no matching member function for call to 'write_vector'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint8_t' (aka 'const unsigned char')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: no matching function for call to 'serialize'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: no function template matches function template specialization 'deserialize'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:289:47: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |                 inline _actual_cpp_type_name_ deserialize<_actual_cpp_type_name_>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::optional<unsigned char>'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::vector<unsigned char>'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::string' (aka 'basic_string<char>')
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:88:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:87:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   87 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:91:9: error: unexpected type name 'uint8_t': expected expression
   91 |         BYTE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint8_t' (aka 'const unsigned char')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint8_t' (aka 'const unsigned char')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint16_t' (aka 'const unsigned short')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint16_t' (aka 'const unsigned short')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint32_t' (aka 'const unsigned int')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint32_t' (aka 'const unsigned int')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint64_t' (aka 'const unsigned long long')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint64_t' (aka 'const unsigned long long')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::Types::uint128_t_placeholder'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::Types::uint128_t_placeholder'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::Types::uint128_t_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::Types::uint128_t_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::Types::uint128_t_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::u256_placeholder'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::u256_placeholder'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int8_t' (aka 'const signed char')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int8_t' (aka 'const signed char')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int16_t' (aka 'const short')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int16_t' (aka 'const short')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int32_t' (aka 'const int')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int32_t' (aka 'const int')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const int32_t' (aka 'const int') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const int32_t' (aka 'const int') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const int32_t' (aka 'const int') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int64_t' (aka 'const long long')
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int64_t' (aka 'const long long')
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const int64_t' (aka 'const long long') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const int64_t' (aka 'const long long') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const int64_t' (aka 'const long long') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::Types::int128_t_placeholder'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::Types::int128_t_placeholder'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::Types::int128_t_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::Types::int128_t_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::Types::int128_t_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::i256_placeholder'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::i256_placeholder'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::i256_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::i256_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::i256_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const bool'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const bool'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const bool' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const bool' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const bool' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const float'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const float'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const float' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const float' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const float' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const double'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const double'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const double' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const double' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const double' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::basic_string'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'std::vector' against 'std::basic_string'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::string' (aka 'const basic_string<char>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::string' (aka 'const basic_string<char>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::string' (aka 'const basic_string<char>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::Identity'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::Identity'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Identity' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Identity' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Identity' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::ConnectionId'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::ConnectionId'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::ConnectionId' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::ConnectionId' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::ConnectionId' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::Timestamp'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::Timestamp'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Timestamp' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Timestamp' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Timestamp' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_optional'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::TimeDuration'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching member function for call to 'write_vector'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:61:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   61 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:80:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::TimeDuration'
   80 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no matching function for call to 'serialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::TimeDuration' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::TimeDuration' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::TimeDuration' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no function template matches function template specialization 'deserialize'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:289:47: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |                 inline _actual_cpp_type_name_ deserialize<_actual_cpp_type_name_>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::optional<unsigned char>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::vector<unsigned char>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'uint8_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::optional<unsigned short>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::vector<unsigned short>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'uint16_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::optional<unsigned int>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::vector<unsigned int>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'uint32_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::optional<unsigned long long>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::vector<unsigned long long>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'uint64_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::Types::uint128_t_placeholder>' to 'const uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::Types::uint128_t_placeholder>' to 'uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::Types::uint128_t_placeholder>' to 'const uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::Types::uint128_t_placeholder>' to 'uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, false) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::u256_placeholder>' to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::u256_placeholder>' to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'u256_placeholder' for 1st argument
  117 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::optional<signed char>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::vector<signed char>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'int8_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::optional<short>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::vector<short>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'int16_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'std::optional<int>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'std::vector<int>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:136:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  136 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'int32_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'std::optional<long long>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'std::vector<long long>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  137 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:152:9: error: unexpected type name 'int64_t': expected expression
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::Types::int128_t_placeholder>' to 'const int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::Types::int128_t_placeholder>' to 'int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::Types::int128_t_placeholder>' to 'const int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::Types::int128_t_placeholder>' to 'int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:138:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  138 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, false) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::i256_placeholder>' to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::i256_placeholder>' to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::i256_placeholder>' to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::i256_placeholder>' to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:126:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'i256_placeholder' for 1st argument
  126 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:139:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  139 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'bool' from incompatible type 'std::optional<bool>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'bool' from incompatible type 'std::vector<bool>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'bool' from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'bool' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'bool' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'bool' from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'bool' from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'bool' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'bool' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  140 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false) \
      |     ^                                      ~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'float' from incompatible type 'std::optional<float>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'float' from incompatible type 'std::vector<float>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'float' from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'float' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'float' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'float' from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'float' from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'float' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'float' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:141:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  141 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false) \
      |     ^                                      ~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'double' from incompatible type 'std::optional<double>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'double' from incompatible type 'std::vector<double>'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'double' from incompatible type 'std::string' (aka 'basic_string<char>')
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'double' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'double' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'double' from incompatible type 'SpacetimeDb::Types::uint128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: assigning to 'double' from incompatible type 'SpacetimeDb::Types::int128_t_placeholder'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'double' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: member reference base type 'double' is not a structure or union
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:142:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  142 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false) \
      |     ^                                      ~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1248:47: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'value_type' (aka 'char') for 1st argument
 1248 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(value_type __c);
      |                                               ^         ~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, std::optional<std::string>>::value' was not satisfied [with _Tp = std::optional<std::string>]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1248:47: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'value_type' (aka 'char') for 1st argument
 1248 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(value_type __c);
      |                                               ^         ~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, std::vector<std::string, std::allocator<std::string>>>::value' was not satisfied [with _Tp = std::vector<std::string>]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'std::string'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'std::string'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2629:44: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'value_type' (aka 'char') for 1st argument
 1248 | basic_string<_CharT, _Traits, _Allocator>::operator=(value_type __c) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, SpacetimeDb::Types::uint128_t_placeholder>::value' was not satisfied [with _Tp = SpacetimeDb::Types::uint128_t_placeholder]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2629:44: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'value_type' (aka 'char') for 1st argument
 1248 | basic_string<_CharT, _Traits, _Allocator>::operator=(value_type __c) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, SpacetimeDb::Types::int128_t_placeholder>::value' was not satisfied [with _Tp = SpacetimeDb::Types::int128_t_placeholder]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'std::string'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no member named 'bsatn_deserialize' in 'std::string'
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:143:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  143 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false) \
      |     ^                                      ~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::Identity>' to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::Identity>' to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::Identity>' to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::Identity>' to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:27:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'Identity' for 1st argument
   27 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:144:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  144 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, false) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::ConnectionId>' to 'const ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::ConnectionId>' to 'ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::ConnectionId>' to 'const ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::ConnectionId>' to 'ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:91:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'ConnectionId' for 1st argument
   91 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:145:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  145 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, false) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::Timestamp>' to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::Timestamp>' to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::Timestamp>' to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::Timestamp>' to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'Timestamp' for 1st argument
   49 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:146:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  146 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, false) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::TimeDuration>' to 'const TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::TimeDuration>' to 'TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::TimeDuration>' to 'const TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::TimeDuration>' to 'TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: no viable overloaded '='
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:103:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'TimeDuration' for 1st argument
  103 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:149:5: error: expected '(' for function-style cast or type construction
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:147:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  147 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::uint128_t_placeholder>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::uint128_t_placeholder>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::uint128_t_placeholder>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::uint128_t_placeholder>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  210 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  210 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:211:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  211 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:211:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  211 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::int128_t_placeholder, k, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::int128_t_placeholder>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::int128_t_placeholder>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::int128_t_placeholder>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::Types::int128_t_placeholder>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:212:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  212 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:212:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  212 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  213 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  213 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:214:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  214 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:214:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  214 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:215:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  215 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:215:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  215 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:216:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  216 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:216:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  216 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:217:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  217 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:217:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  217 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Identity, q, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Identity>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Identity>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Identity>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Identity>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:218:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  218 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:218:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  218 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::ConnectionId, r, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::ConnectionId>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::ConnectionId>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::ConnectionId>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::ConnectionId>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:219:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  219 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:219:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  219 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::Timestamp, s, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Timestamp>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Timestamp>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Timestamp>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::Timestamp>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching member function for call to 'write_optional'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:220:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  220 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, true)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:59:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   59 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:69:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   69 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no matching function for call to 'serialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:286:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  286 |                 FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:220:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  220 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::TimeDuration, t, false, true)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:63:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   63 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:74:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::TimeDuration>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   74 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   77 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   78 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   79 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:88:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::TimeDuration>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   88 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   89 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   90 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   91 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   92 |         ({
      |         ~~
   93 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   94 |             })
      |             ~~
   95 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:149:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::TimeDuration>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  149 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  152 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  153 |         ({
      |         ~~
  154 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  155 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  156 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  157 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  158 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  159 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  160 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  161 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  162 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  163 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  164 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:222:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::TimeDuration>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:285:25: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  285 |             inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const _actual_cpp_type_name_& value) { \
      |                         ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no function template matches function template specialization 'deserialize'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:289:47: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |                 inline _actual_cpp_type_name_ deserialize<_actual_cpp_type_name_>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned char>' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned char>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned char>' to 'vector<unsigned char>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:225:9: error: unexpected type name 'uint8_t': expected expression
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned short>' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned short>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned short>' to 'vector<unsigned short>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:225:9: error: unexpected type name 'uint16_t': expected expression
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned int>' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned int>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned int>' to 'vector<unsigned int>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:225:9: error: unexpected type name 'uint32_t': expected expression
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned long long>' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned long long>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned long long>' to 'vector<unsigned long long>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:225:9: error: unexpected type name 'uint64_t': expected expression
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::Types::uint128_t_placeholder>' to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::Types::uint128_t_placeholder>' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::Types::uint128_t_placeholder>' to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::Types::uint128_t_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::Types::uint128_t_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::Types::uint128_t_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<SpacetimeDb::Types::uint128_t_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::Types::uint128_t_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::Types::uint128_t_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: expected '(' for function-style cast or type construction
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::Types::uint128_t_placeholder, e, false, true) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: expected '(' for function-style cast or type construction
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true) \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:92:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   92 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<signed char>' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<signed char>' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<signed char>' to 'vector<signed char>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:225:9: error: unexpected type name 'int8_t': expected expression
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<short>' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<short>' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<short>' to 'vector<short>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:83:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   83 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::uint128_t_placeholder' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'SpacetimeDb::Types::int128_t_placeholder' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:90:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   90 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:225:9: error: unexpected type name 'int16_t': expected expression
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<int>' to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<int>' to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<int>' to 'vector<int>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:222:5: error: no viable overloaded '='
  222 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  225 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  226 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  227 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  228 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  229 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  230 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  231 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  232 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  233 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  234 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  235 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  236 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  237 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:291:30: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  291 |                 FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                 ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:209:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  209 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true) \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
2 warnings and 501 errors generated.
emcc: error: ''C:/Users/ludvi/emsdk/upstream/bin\clang.exe' -target wasm32-unknown-emscripten -fignore-exceptions -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr '--sysroot=C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot' -DEMSCRIPTEN -Xclang '-iwithsysroot/include\fakesdl' -Xclang '-iwithsysroot/include\compat' -std=c++20 -I../../../sdk/include -ferror-limit=500 -c sdk_test.cpp -o 'C:\Users\ludvi\AppData\Local\Temp\emscripten_temp_w0_ofu6y\sdk_test_0.o'' failed (returned 1)
