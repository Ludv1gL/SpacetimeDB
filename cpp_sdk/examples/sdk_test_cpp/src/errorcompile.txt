In file included from sdk_test.cpp:1:
In file included from .\sdk_test.h:4:
In file included from ../../../sdk/include\spacetimedb/macros.h:4:
In file included from ../../../sdk/include\spacetimedb/internal/module_schema.h:4:
In file included from ../../../sdk/include\spacetimedb/bsatn/reader.h:14:
In file included from ../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:11:
../../../sdk/include\spacetimedb/bsatn/writer.h:29:47: error: no member named 'sdk' in namespace 'SpacetimeDb'
   29 |         void write_u256_le(const SpacetimeDb::sdk::u256_placeholder& value);
      |                                  ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/bsatn/writer.h:36:47: error: no member named 'sdk' in namespace 'SpacetimeDb'
   36 |         void write_i256_le(const SpacetimeDb::sdk::i256_placeholder& value);
      |                                  ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/bsatn/writer.h:80:54: error: no member named 'sdk' in namespace 'SpacetimeDb'
   80 |         inline void write_u256_le(const SpacetimeDb::sdk::u256_placeholder& value) {
      |                                         ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/bsatn/writer.h:85:54: error: no member named 'sdk' in namespace 'SpacetimeDb'
   85 |         inline void write_i256_le(const SpacetimeDb::sdk::i256_placeholder& value) {
      |                                         ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/bsatn/writer.h:141:57: error: no member named 'sdk' in namespace 'SpacetimeDb'
  141 |     inline void serialize(Writer& w, const SpacetimeDb::sdk::u256_placeholder& value) { w.write_u256_le(value); }
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/bsatn/writer.h:147:57: error: no member named 'sdk' in namespace 'SpacetimeDb'
  147 |     inline void serialize(Writer& w, const SpacetimeDb::sdk::i256_placeholder& value) { w.write_i256_le(value); }
      |                                            ~~~~~~~~~~~~~^
In file included from sdk_test.cpp:1:
In file included from .\sdk_test.h:4:
In file included from ../../../sdk/include\spacetimedb/macros.h:4:
In file included from ../../../sdk/include\spacetimedb/internal/module_schema.h:4:
In file included from ../../../sdk/include\spacetimedb/bsatn/reader.h:14:
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:49:56: error: no type named 'Reader' in namespace 'SpacetimeDb::bsatn'
   49 |             void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader);
      |                                    ~~~~~~~~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:73:56: error: no type named 'Reader' in namespace 'SpacetimeDb::bsatn'
   73 |             void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader);
      |                                    ~~~~~~~~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:90:56: error: no type named 'Reader' in namespace 'SpacetimeDb::bsatn'
   90 |             void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader) {
      |                                    ~~~~~~~~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:109:56: error: no type named 'Reader' in namespace 'SpacetimeDb::bsatn'
  109 |             void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader) {
      |                                    ~~~~~~~~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:125:56: error: no type named 'Reader' in namespace 'SpacetimeDb::bsatn'
  125 |             void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader) {
      |                                    ~~~~~~~~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:139:56: error: no type named 'Reader' in namespace 'SpacetimeDb::bsatn'
  139 |             void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader) { *this = reader.read_u256_le(); }
      |                                    ~~~~~~~~~~~~~~~~~~~~^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\__compare/synth_three_way.h:28:65: note: unnamed type used in template argument was declared here
   28 | _LIBCPP_HIDE_FROM_ABI inline constexpr auto __synth_three_way = []<class _Tp, class _Up>(const _Tp& __t, const _Up& __u)
      |                                                                 ^
In file included from sdk_test.cpp:1:
In file included from .\sdk_test.h:4:
In file included from ../../../sdk/include\spacetimedb/macros.h:4:
In file included from ../../../sdk/include\spacetimedb/internal/module_schema.h:4:
In file included from ../../../sdk/include\spacetimedb/bsatn/reader.h:14:
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:149:56: error: no type named 'Reader' in namespace 'SpacetimeDb::bsatn'
  149 |             void bsatn_deserialize(SpacetimeDb::bsatn::Reader& reader) { *this = reader.read_i256_le(); }
      |                                    ~~~~~~~~~~~~~~~~~~~~^
In file included from sdk_test.cpp:1:
In file included from .\sdk_test.h:4:
In file included from ../../../sdk/include\spacetimedb/macros.h:4:
In file included from ../../../sdk/include\spacetimedb/internal/module_schema.h:4:
../../../sdk/include\spacetimedb/bsatn/reader.h:44:9: error: no type named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'; did you mean 'Types::uint128_t_placeholder'?
   44 |         SpacetimeDb::bsatn::uint128_placeholder read_u128_le(); // Corrected namespace
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         Types::uint128_t_placeholder
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: 'Types::uint128_t_placeholder' declared here
   14 |         struct uint128_t_placeholder {
      |                ^
In file included from sdk_test.cpp:1:
In file included from .\sdk_test.h:4:
In file included from ../../../sdk/include\spacetimedb/macros.h:4:
In file included from ../../../sdk/include\spacetimedb/internal/module_schema.h:4:
../../../sdk/include\spacetimedb/bsatn/reader.h:51:9: error: no type named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'; did you mean 'Types::int128_t_placeholder'?
   51 |         SpacetimeDb::bsatn::int128_placeholder read_i128_le(); // Corrected namespace
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         Types::int128_t_placeholder
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: 'Types::int128_t_placeholder' declared here
   28 |         struct int128_t_placeholder {
      |                ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:47:5: error: no function template matches function template specialization 'deserialize'
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^
../../../sdk/include\spacetimedb/macros.h:136:24: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  136 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:62:5: error: no function template matches function template specialization 'deserialize'
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: no matching member function for call to 'write_optional'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint8_t' (aka 'const unsigned char')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: no matching member function for call to 'write_vector'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint8_t' (aka 'const unsigned char')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: no matching function for call to 'serialize'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: no function template matches function template specialization 'deserialize'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::optional<unsigned char>'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::vector<unsigned char>'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::string' (aka 'basic_string<char>')
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'Types::uint128_t_placeholder'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'Types::int128_t_placeholder'
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:76:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:75:5: note: expanded from macro 'BYTE_STRUCT_FIELDS'
   75 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, b, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:79:9: error: unexpected type name 'uint8_t': expected expression
   79 |         BYTE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:97:9: error: no type named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'; did you mean 'SpacetimeDb::Types::uint128_t_placeholder'?
   97 |         ::SpacetimeDb::bsatn::uint128_placeholder e; // Corrected type
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         SpacetimeDb::Types::uint128_t_placeholder
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: 'SpacetimeDb::Types::uint128_t_placeholder' declared here
   14 |         struct uint128_t_placeholder {
      |                ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:103:9: error: no type named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'; did you mean 'SpacetimeDb::Types::int128_t_placeholder'?
  103 |         ::SpacetimeDb::bsatn::int128_placeholder k; // Corrected type
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |         SpacetimeDb::Types::int128_t_placeholder
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: 'SpacetimeDb::Types::int128_t_placeholder' declared here
   28 |         struct int128_t_placeholder {
      |                ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:109:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'; did you mean '::SpacetimeDb::sdk'?
  109 |         SpacetimeDb::sdk::Identity q;
      |         ^~~~~~~~~~~~~~~~
      |         ::SpacetimeDb::sdk
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:29:15: note: '::SpacetimeDb::sdk' declared here
   29 |     namespace sdk {
      |               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:110:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'; did you mean '::SpacetimeDb::sdk'?
  110 |         SpacetimeDb::sdk::ConnectionId r; // Assuming this is a type from spacetimedb_sdk_types.h
      |         ^~~~~~~~~~~~~~~~
      |         ::SpacetimeDb::sdk
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:29:15: note: '::SpacetimeDb::sdk' declared here
   29 |     namespace sdk {
      |               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:111:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'; did you mean '::SpacetimeDb::sdk'?
  111 |         SpacetimeDb::sdk::Timestamp s;
      |         ^~~~~~~~~~~~~~~~
      |         ::SpacetimeDb::sdk
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:29:15: note: '::SpacetimeDb::sdk' declared here
   29 |     namespace sdk {
      |               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:112:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'; did you mean '::SpacetimeDb::sdk'?
  112 |         SpacetimeDb::sdk::TimeDuration t; // Assuming this is a type from spacetimedb_sdk_types.h
      |         ^~~~~~~~~~~~~~~~
      |         ::SpacetimeDb::sdk
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:29:15: note: '::SpacetimeDb::sdk' declared here
   29 |     namespace sdk {
      |               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint8_t' (aka 'const unsigned char')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint8_t' (aka 'const unsigned char')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint16_t' (aka 'const unsigned short')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint16_t' (aka 'const unsigned short')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint32_t' (aka 'const unsigned int')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint32_t' (aka 'const unsigned int')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint64_t' (aka 'const unsigned long long')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint64_t' (aka 'const unsigned long long')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const SpacetimeDb::Types::uint128_t_placeholder'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const SpacetimeDb::Types::uint128_t_placeholder'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::uint128_t_placeholder' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::uint128_t_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::uint128_t_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::uint128_t_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::u256_placeholder'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::u256_placeholder'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int8_t' (aka 'const signed char')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int8_t' (aka 'const signed char')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int16_t' (aka 'const short')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int16_t' (aka 'const short')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int32_t' (aka 'const int')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int32_t' (aka 'const int')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const int32_t' (aka 'const int') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const int32_t' (aka 'const int') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const int32_t' (aka 'const int') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const int32_t' (aka 'const int') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int64_t' (aka 'const long long')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int64_t' (aka 'const long long')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const int64_t' (aka 'const long long') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const int64_t' (aka 'const long long') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const int64_t' (aka 'const long long') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const int64_t' (aka 'const long long') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const SpacetimeDb::Types::int128_t_placeholder'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const SpacetimeDb::Types::int128_t_placeholder'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::int128_t_placeholder' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::int128_t_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::int128_t_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const SpacetimeDb::Types::int128_t_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::i256_placeholder'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::i256_placeholder'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::i256_placeholder' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::i256_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::i256_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::i256_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const bool'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const bool'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const bool' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const bool' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const bool' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const bool' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const float'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const float'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const float' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const float' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const float' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const float' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const double'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const double'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const double' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const double' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const double' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const double' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::basic_string'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'std::vector' against 'std::basic_string'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::string' (aka 'const basic_string<char>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::string' (aka 'const basic_string<char>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::string' (aka 'const basic_string<char>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::string' (aka 'const basic_string<char>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::Identity'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::Identity'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Identity' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Identity' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Identity' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Identity' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::ConnectionId'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::ConnectionId'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::ConnectionId' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::ConnectionId' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::ConnectionId' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::ConnectionId' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::Timestamp'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::Timestamp'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Timestamp' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Timestamp' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Timestamp' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::Timestamp' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_optional'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::TimeDuration'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching member function for call to 'write_vector'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::TimeDuration'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no matching function for call to 'serialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::TimeDuration' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::TimeDuration' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::TimeDuration' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::TimeDuration' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no function template matches function template specialization 'deserialize'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::optional<unsigned char>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::vector<unsigned char>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:116:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  116 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'uint8_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:137:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::optional<unsigned short>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::vector<unsigned short>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:117:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  117 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'uint16_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:137:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::optional<unsigned int>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::vector<unsigned int>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:118:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  118 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'uint32_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:137:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::optional<unsigned long long>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::vector<unsigned long long>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:119:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  119 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'uint64_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:14:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'uint128_t_placeholder' for 1st argument
   14 |         struct uint128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:120:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  120 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::u256_placeholder>' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::u256_placeholder>' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: expected '(' for function-style cast or type construction
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:121:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  121 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, false); \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::optional<signed char>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::vector<signed char>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:122:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  122 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'int8_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:137:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::optional<short>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::vector<short>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:123:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  123 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'int16_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:137:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'std::optional<int>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'std::vector<int>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int32_t' (aka 'int') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int32_t' (aka 'int') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:124:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  124 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'int32_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:137:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'std::optional<long long>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'std::vector<long long>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'int64_t' (aka 'long long') from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'int64_t' (aka 'long long') is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:125:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  125 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: unexpected type name 'int64_t': expected expression
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn\uint128_placeholder.h:28:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'int128_t_placeholder' for 1st argument
   28 |         struct int128_t_placeholder {
      |                ^~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'SpacetimeDb::Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:126:66: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  126 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, false); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::i256_placeholder>' to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::i256_placeholder>' to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::i256_placeholder>' to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::i256_placeholder>' to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:144:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'i256_placeholder' for 1st argument
  144 |         struct i256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: expected '(' for function-style cast or type construction
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:127:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  127 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, false); \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'bool' from incompatible type 'std::optional<bool>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'bool' from incompatible type 'std::vector<bool>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'bool' from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'bool' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'bool' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'bool' from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'bool' from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'bool' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'bool' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: expected '(' for function-style cast or type construction
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:128:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  128 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, false); \
      |     ^                                      ~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'float' from incompatible type 'std::optional<float>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'float' from incompatible type 'std::vector<float>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'float' from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'float' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'float' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'float' from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'float' from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'float' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'float' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: expected '(' for function-style cast or type construction
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:129:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  129 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, false); \
      |     ^                                      ~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'double' from incompatible type 'std::optional<double>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'double' from incompatible type 'std::vector<double>'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'double' from incompatible type 'std::string' (aka 'basic_string<char>')
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'double' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'double' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'double' from incompatible type 'Types::uint128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: assigning to 'double' from incompatible type 'Types::int128_t_placeholder'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'double' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: member reference base type 'double' is not a structure or union
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: expected '(' for function-style cast or type construction
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:130:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  130 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, false); \
      |     ^                                      ~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1248:47: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'value_type' (aka 'char') for 1st argument
 1248 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(value_type __c);
      |                                               ^         ~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, std::optional<std::string>>::value' was not satisfied [with _Tp = std::optional<std::string>]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1248:47: note: candidate function not viable: no known conversion from 'std::vector<std::string>' to 'value_type' (aka 'char') for 1st argument
 1248 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(value_type __c);
      |                                               ^         ~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, std::vector<std::string, std::allocator<std::string>>>::value' was not satisfied [with _Tp = std::vector<std::string>]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'std::string'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'std::string'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2629:44: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'value_type' (aka 'char') for 1st argument
 1248 | basic_string<_CharT, _Traits, _Allocator>::operator=(value_type __c) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, SpacetimeDb::Types::uint128_t_placeholder>::value' was not satisfied [with _Tp = Types::uint128_t_placeholder]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2650:44: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const string' for 1st argument
 1220 | basic_string<_CharT, _Traits, _Allocator>::operator=(const basic_string& __str) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1233:3: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'string' for 1st argument
 1233 |   operator=(basic_string&& __str) noexcept(__noexcept_move_assign_container<_Allocator, __alloc_traits>::value) {
      |   ^         ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1238:69: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<char>') for 1st argument
 1238 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(initializer_list<value_type> __il) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1242:69: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const value_type *' (aka 'const char *') for 1st argument
 1242 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const value_type* __s) {
      |                                                                     ^         ~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:2629:44: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'value_type' (aka 'char') for 1st argument
 1248 | basic_string<_CharT, _Traits, _Allocator>::operator=(value_type __c) {
      |                                            ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\string:1226:47: note: candidate template ignored: requirement '__can_be_converted_to_string_view<char, std::char_traits<char>, SpacetimeDb::Types::int128_t_placeholder>::value' was not satisfied [with _Tp = Types::int128_t_placeholder]
 1226 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 basic_string& operator=(const _Tp& __t) {
      |                                               ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'std::string'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no member named 'bsatn_deserialize' in 'std::string'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: expected '(' for function-style cast or type construction
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:131:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  131 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, false); \
      |     ^                                      ~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:33:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'Identity' for 1st argument
   33 |         class Identity {
      |               ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:132:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  132 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:101:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const ConnectionId' for 1st argument
  101 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:101:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'ConnectionId' for 1st argument
  101 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:101:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const ConnectionId' for 1st argument
  101 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:101:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'ConnectionId' for 1st argument
  101 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:101:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const ConnectionId' for 1st argument
  101 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:101:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'ConnectionId' for 1st argument
  101 |         struct ConnectionId {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:133:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  133 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:55:15: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'Timestamp' for 1st argument
   55 |         class Timestamp {
      |               ^~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:134:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  134 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, false); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const TimeDuration' for 1st argument
  117 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'TimeDuration' for 1st argument
  117 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const TimeDuration' for 1st argument
  117 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'TimeDuration' for 1st argument
  117 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:137:5: error: no viable overloaded '='
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:5: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const TimeDuration' for 1st argument
  117 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:117:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'TimeDuration' for 1st argument
  117 |         struct TimeDuration {
      |                ^~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:140:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:135:57: note: expanded from macro 'EVERY_PRIMITIVE_STRUCT_FIELDS'
  135 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, false)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:170:43: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  170 |         std::vector<::SpacetimeDb::bsatn::uint128_placeholder> e;
      |                                           ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:176:43: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  176 |         std::vector<::SpacetimeDb::bsatn::int128_placeholder> k;
      |                                           ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:182:34: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  182 |         std::vector<SpacetimeDb::sdk::Identity> q;
      |                     ~~~~~~~~~~~~~^
.\sdk_test.h:183:34: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  183 |         std::vector<SpacetimeDb::sdk::ConnectionId> r;
      |                     ~~~~~~~~~~~~~^
.\sdk_test.h:184:34: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  184 |         std::vector<SpacetimeDb::sdk::Timestamp> s;
      |                     ~~~~~~~~~~~~~^
.\sdk_test.h:185:34: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  185 |         std::vector<SpacetimeDb::sdk::TimeDuration> t;
      |                     ~~~~~~~~~~~~~^
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<uint8_t>' (aka 'const vector<unsigned char>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<uint16_t>' (aka 'const vector<unsigned short>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<uint32_t>' (aka 'const vector<unsigned int>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<uint64_t>' (aka 'const vector<unsigned long long>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::u256_placeholder>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<int8_t>' (aka 'const vector<signed char>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<int16_t>' (aka 'const vector<short>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<int32_t>' (aka 'const vector<int>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<int64_t>' (aka 'const vector<long long>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector< ::SpacetimeDb::sdk::i256_placeholder>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<bool>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<float>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<double>' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching member function for call to 'write_optional'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'std::optional' against 'std::vector'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no matching function for call to 'serialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const std::vector<std::string>' (aka 'const vector<basic_string<char>>') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no function template matches function template specialization 'deserialize'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned char>' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned char>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned char>' to 'vector<unsigned char>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<unsigned char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<unsigned char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:189:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  189 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, a, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'uint8_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned short>' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned short>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned short>' to 'vector<unsigned short>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<unsigned short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<unsigned short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:190:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  190 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, b, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'uint16_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned int>' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned int>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned int>' to 'vector<unsigned int>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<unsigned int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<unsigned int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:191:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  191 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, c, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'uint32_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned long long>' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned long long>' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<unsigned long long>' to 'vector<unsigned long long>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<unsigned long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<unsigned long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<unsigned long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<unsigned long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:192:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  192 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, d, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'uint64_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:193:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  193 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, e, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::u256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<SpacetimeDb::sdk::u256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::u256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: expected '(' for function-style cast or type construction
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:194:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  194 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, f, false, true); \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<signed char>' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<signed char>' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<signed char>' to 'vector<signed char>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<signed char>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<signed char>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<signed char>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<signed char>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:195:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  195 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, g, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'int8_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<short>' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<short>' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<short>' to 'vector<short>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<short>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<short>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<short>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<short>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:196:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  196 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, h, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'int16_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<int>' to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<int>' to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<int>' to 'vector<int>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<int>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<int>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<int>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<int>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:197:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  197 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int32_t, i, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'int32_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<long long>' to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<long long>' to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<long long>' to 'vector<long long>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<long long>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<long long>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<long long>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<long long>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:198:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  198 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int64_t, j, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: unexpected type name 'int64_t': expected expression
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:213:9: error: no member named 'int128_placeholder' in namespace 'SpacetimeDb::bsatn'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:199:66: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  199 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::int128_placeholder, k, false, true); \
      |                                                                  ^~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::i256_placeholder>' to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::i256_placeholder>' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::i256_placeholder>' to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::i256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::i256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<SpacetimeDb::sdk::i256_placeholder>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<SpacetimeDb::sdk::i256_placeholder>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::i256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<SpacetimeDb::sdk::i256_placeholder>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: expected '(' for function-style cast or type construction
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:200:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  200 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::i256_placeholder, l, false, true); \
      |     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'std::optional<bool>' to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'std::optional<bool>' to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2000:63: note: candidate function not viable: no known conversion from 'std::optional<bool>' to 'vector<bool>' for 1st argument
 2000 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(vector&& __v)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'float' to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'double' to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'bool' to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<bool>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<bool>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1978:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<bool>' for 1st argument
 1978 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(const vector& __v);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1985:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<bool>') for 1st argument
 1985 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX20 vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:2547:27: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<bool>' for 1st argument
 2000 | vector<bool, _Allocator>::operator=(vector&& __v)
      |                           ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<bool>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<bool>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: expected '(' for function-style cast or type construction
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:201:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  201 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, bool, m, false, true); \
      |     ^                                      ~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<float>' to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<float>' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<float>' to 'vector<float>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<float>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<float>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<float>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<float>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<float>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<float>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<float>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: expected '(' for function-style cast or type construction
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:202:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  202 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, float, n, false, true); \
      |     ^                                      ~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::optional<double>' to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<double>' to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<double>' to 'vector<double>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'float' to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'double' to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'bool' to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<double>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<double>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:546:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<double>' for 1st argument
  546 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(const vector& __x);
      |                                                               ^         ~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<double>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<double>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<double>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<double>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: expected '(' for function-style cast or type construction
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:203:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  203 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, double, o, false, true); \
      |     ^                                      ~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:569:63: note: candidate function not viable: no known conversion from 'std::optional<std::string>' to 'vector<std::string>' for 1st argument
  569 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(vector&& __x)
      |                                                               ^         ~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int8_t' (aka 'signed char') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int16_t' (aka 'short') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int32_t' (aka 'int') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'int64_t' (aka 'long long') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'float' to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'float' to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'float' to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'double' to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'double' to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'double' to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'bool' to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'bool' to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'bool' to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<std::string>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<std::string>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:110: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::uint128_t_placeholder' to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no viable overloaded '='
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1337:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'const vector<std::string>' for 1st argument
  546 | vector<_Tp, _Allocator>::operator=(const vector& __x) {
      |                          ^
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:554:63: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'initializer_list<value_type>' (aka 'initializer_list<std::string>') for 1st argument
  554 |   _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI vector& operator=(initializer_list<value_type> __il) {
      |                                                               ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot/include/c++/v1\vector:1308:26: note: candidate function not viable: no known conversion from 'Types::int128_t_placeholder' to 'vector<std::string>' for 1st argument
  569 | vector<_Tp, _Allocator>::operator=(vector&& __x)
      |                          ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<std::string>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: no member named 'bsatn_deserialize' in 'std::vector<std::string>'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:117: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:210:5: error: expected '(' for function-style cast or type construction
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:204:5: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  204 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, std::string, p, false, true); \
      |     ^                                      ~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:205:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  205 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Identity, q, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:206:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  206 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::ConnectionId, r, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:207:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  207 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::Timestamp, s, false, true); \
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:67:57: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                                         ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:69:55: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                                       ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:71:38: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:72:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:73:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:74:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:75:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:76:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:77:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:78:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:79:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:80:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:81:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:82:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:84:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:85:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:86:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:87:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:88:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:89:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                           ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:213:9: error: no member named 'sdk' in namespace 'sdk_test_cpp::SpacetimeDb'
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:208:57: note: expanded from macro 'EVERY_VEC_STRUCT_FIELDS'
  208 |     ACTION(WRITER_OR_READER, VALUE_OR_OBJ, SpacetimeDb::sdk::TimeDuration, t, false, true)
      |                                            ~~~~~~~~~~~~~^
../../../sdk/include\spacetimedb/macros.h:93:70: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ^~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:270:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  270 |             uint8_t, uint16_t, uint32_t, uint64_t, ::SpacetimeDb::bsatn::uint128_placeholder, ::SpacetimeDb::sdk::u256_placeholder,
      |                                                                          ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:273:62: error: expected member name or ';' after declaration specifiers
  269 |         std::variant<
      |         ~~~~~~~~~~~~~
  270 |             uint8_t, uint16_t, uint32_t, uint64_t, ::SpacetimeDb::bsatn::uint128_placeholder, ::SpacetimeDb::sdk::u256_placeholder,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  271 |             int8_t, int16_t, int32_t, int64_t, ::SpacetimeDb::bsatn::int128_placeholder, ::SpacetimeDb::sdk::i256_placeholder,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  272 |             bool, float, double, std::string, SpacetimeDb::sdk::Identity, SpacetimeDb::sdk::ConnectionId,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  273 |             SpacetimeDb::sdk::Timestamp, std::vector<uint8_t>, std::vector<int32_t>,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
.\sdk_test.h:290:5: error: no function template matches function template specialization 'deserialize'
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^
../../../sdk/include\spacetimedb/macros.h:136:24: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  136 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:310:5: error: too many arguments provided to function-like macro invocation
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:289:54: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |                                                      ^
.\sdk_test.h:306:9: note: macro 'ENUM_WITH_PAYLOAD_FIELDS' defined here
  306 | #define ENUM_WITH_PAYLOAD_FIELDS(XX) \
      |         ^
.\sdk_test.h:313:9: error: use of undeclared identifier 'ENUM_WITH_PAYLOAD_FIELDS'
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: error: no function template matches function template specialization 'deserialize'
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:310:5: error: too many arguments provided to function-like macro invocation
../../../sdk/include\spacetimedb/macros.h:294:56: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |                                                        ^
.\sdk_test.h:306:9: note: macro 'ENUM_WITH_PAYLOAD_FIELDS' defined here
  306 | #define ENUM_WITH_PAYLOAD_FIELDS(XX) \
      |         ^
.\sdk_test.h:313:9: error: use of undeclared identifier 'ENUM_WITH_PAYLOAD_FIELDS'
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: error: no matching member function for call to 'write_optional'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint8_t' (aka 'const unsigned char')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: no matching member function for call to 'write_vector'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint8_t' (aka 'const unsigned char')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: no matching function for call to 'serialize'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:290:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::EnumWithPayloadTag' for 2nd argument
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         SPACETIMEDB_ENUM_VARIANT("TagU8"), SPACETIMEDB_ENUM_VARIANT("TagU16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |         SPACETIMEDB_ENUM_VARIANT("TagU32"), SPACETIMEDB_ENUM_VARIANT("TagU64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |         SPACETIMEDB_ENUM_VARIANT("TagU128"), SPACETIMEDB_ENUM_VARIANT("TagU256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |         SPACETIMEDB_ENUM_VARIANT("TagI8"), SPACETIMEDB_ENUM_VARIANT("TagI16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |         SPACETIMEDB_ENUM_VARIANT("TagI32"), SPACETIMEDB_ENUM_VARIANT("TagI64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  296 |         SPACETIMEDB_ENUM_VARIANT("TagI128"), SPACETIMEDB_ENUM_VARIANT("TagI256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |         SPACETIMEDB_ENUM_VARIANT("TagBool"), SPACETIMEDB_ENUM_VARIANT("TagF32"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         SPACETIMEDB_ENUM_VARIANT("TagF64"), SPACETIMEDB_ENUM_VARIANT("TagStr"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  299 |         SPACETIMEDB_ENUM_VARIANT("TagIdentity"), SPACETIMEDB_ENUM_VARIANT("TagConnectionId"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |         SPACETIMEDB_ENUM_VARIANT("TagTimestamp"), SPACETIMEDB_ENUM_VARIANT("TagBytes"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |         SPACETIMEDB_ENUM_VARIANT("TagInts"), SPACETIMEDB_ENUM_VARIANT("TagStrings"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |         SPACETIMEDB_ENUM_VARIANT("TagSimpleEnums")
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |         }));
      |         ~~~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::EnumWithPayload' for 2nd argument
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |         sdk_test_cpp::EnumWithPayload, sdk_test_cpp_EnumWithPayload,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |         "EnumWithPayload",
      |         ~~~~~~~~~~~~~~~~~~
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |         ({
      |         ~~
  315 |             SPACETIMEDB_FIELD_CUSTOM("tag", "EnumWithPayloadTag", false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |             SPACETIMEDB_FIELD("payload_bytes_for_schema", ::SpacetimeDb::CoreType::Bytes, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |             })
      |             ~~
  318 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: note: candidate function not viable: no known conversion from 'const uint8_t' (aka 'const unsigned char') to 'const sdk_test_cpp::OneU8Row' for 2nd argument
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: no function template matches function template specialization 'deserialize'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::optional<unsigned char>'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::vector<unsigned char>'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'std::string' (aka 'basic_string<char>')
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'Types::uint128_t_placeholder'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: assigning to 'uint8_t' (aka 'unsigned char') from incompatible type 'Types::int128_t_placeholder'
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:329:5: error: member reference base type 'uint8_t' (aka 'unsigned char') is not a structure or union
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:328:67: note: expanded from macro 'ONE_U8_ROW_FIELDS'
  328 | #define ONE_U8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:330:68: error: unexpected type name 'uint8_t': expected expression
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |                                                                    ^
.\sdk_test.h:339:5: error: no matching member function for call to 'write_optional'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint16_t' (aka 'const unsigned short')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: no matching member function for call to 'write_vector'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint16_t' (aka 'const unsigned short')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: no matching function for call to 'serialize'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:290:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::EnumWithPayloadTag' for 2nd argument
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         SPACETIMEDB_ENUM_VARIANT("TagU8"), SPACETIMEDB_ENUM_VARIANT("TagU16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |         SPACETIMEDB_ENUM_VARIANT("TagU32"), SPACETIMEDB_ENUM_VARIANT("TagU64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |         SPACETIMEDB_ENUM_VARIANT("TagU128"), SPACETIMEDB_ENUM_VARIANT("TagU256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |         SPACETIMEDB_ENUM_VARIANT("TagI8"), SPACETIMEDB_ENUM_VARIANT("TagI16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |         SPACETIMEDB_ENUM_VARIANT("TagI32"), SPACETIMEDB_ENUM_VARIANT("TagI64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  296 |         SPACETIMEDB_ENUM_VARIANT("TagI128"), SPACETIMEDB_ENUM_VARIANT("TagI256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |         SPACETIMEDB_ENUM_VARIANT("TagBool"), SPACETIMEDB_ENUM_VARIANT("TagF32"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         SPACETIMEDB_ENUM_VARIANT("TagF64"), SPACETIMEDB_ENUM_VARIANT("TagStr"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  299 |         SPACETIMEDB_ENUM_VARIANT("TagIdentity"), SPACETIMEDB_ENUM_VARIANT("TagConnectionId"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |         SPACETIMEDB_ENUM_VARIANT("TagTimestamp"), SPACETIMEDB_ENUM_VARIANT("TagBytes"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |         SPACETIMEDB_ENUM_VARIANT("TagInts"), SPACETIMEDB_ENUM_VARIANT("TagStrings"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |         SPACETIMEDB_ENUM_VARIANT("TagSimpleEnums")
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |         }));
      |         ~~~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::EnumWithPayload' for 2nd argument
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |         sdk_test_cpp::EnumWithPayload, sdk_test_cpp_EnumWithPayload,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |         "EnumWithPayload",
      |         ~~~~~~~~~~~~~~~~~~
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |         ({
      |         ~~
  315 |             SPACETIMEDB_FIELD_CUSTOM("tag", "EnumWithPayloadTag", false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |             SPACETIMEDB_FIELD("payload_bytes_for_schema", ::SpacetimeDb::CoreType::Bytes, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |             })
      |             ~~
  318 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::OneU8Row' for 2nd argument
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:339:5: note: candidate function not viable: no known conversion from 'const uint16_t' (aka 'const unsigned short') to 'const sdk_test_cpp::OneU16Row' for 2nd argument
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: no function template matches function template specialization 'deserialize'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::optional<unsigned short>'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::vector<unsigned short>'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'std::string' (aka 'basic_string<char>')
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'Types::uint128_t_placeholder'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: assigning to 'uint16_t' (aka 'unsigned short') from incompatible type 'Types::int128_t_placeholder'
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:339:5: error: member reference base type 'uint16_t' (aka 'unsigned short') is not a structure or union
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:338:68: note: expanded from macro 'ONE_U16_ROW_FIELDS'
  338 | #define ONE_U16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:340:71: error: unexpected type name 'uint16_t': expected expression
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |                                                                       ^
.\sdk_test.h:349:5: error: no matching member function for call to 'write_optional'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint32_t' (aka 'const unsigned int')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: no matching member function for call to 'write_vector'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint32_t' (aka 'const unsigned int')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: no matching function for call to 'serialize'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:290:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::EnumWithPayloadTag' for 2nd argument
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         SPACETIMEDB_ENUM_VARIANT("TagU8"), SPACETIMEDB_ENUM_VARIANT("TagU16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |         SPACETIMEDB_ENUM_VARIANT("TagU32"), SPACETIMEDB_ENUM_VARIANT("TagU64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |         SPACETIMEDB_ENUM_VARIANT("TagU128"), SPACETIMEDB_ENUM_VARIANT("TagU256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |         SPACETIMEDB_ENUM_VARIANT("TagI8"), SPACETIMEDB_ENUM_VARIANT("TagI16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |         SPACETIMEDB_ENUM_VARIANT("TagI32"), SPACETIMEDB_ENUM_VARIANT("TagI64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  296 |         SPACETIMEDB_ENUM_VARIANT("TagI128"), SPACETIMEDB_ENUM_VARIANT("TagI256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |         SPACETIMEDB_ENUM_VARIANT("TagBool"), SPACETIMEDB_ENUM_VARIANT("TagF32"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         SPACETIMEDB_ENUM_VARIANT("TagF64"), SPACETIMEDB_ENUM_VARIANT("TagStr"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  299 |         SPACETIMEDB_ENUM_VARIANT("TagIdentity"), SPACETIMEDB_ENUM_VARIANT("TagConnectionId"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |         SPACETIMEDB_ENUM_VARIANT("TagTimestamp"), SPACETIMEDB_ENUM_VARIANT("TagBytes"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |         SPACETIMEDB_ENUM_VARIANT("TagInts"), SPACETIMEDB_ENUM_VARIANT("TagStrings"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |         SPACETIMEDB_ENUM_VARIANT("TagSimpleEnums")
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |         }));
      |         ~~~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::EnumWithPayload' for 2nd argument
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |         sdk_test_cpp::EnumWithPayload, sdk_test_cpp_EnumWithPayload,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |         "EnumWithPayload",
      |         ~~~~~~~~~~~~~~~~~~
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |         ({
      |         ~~
  315 |             SPACETIMEDB_FIELD_CUSTOM("tag", "EnumWithPayloadTag", false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |             SPACETIMEDB_FIELD("payload_bytes_for_schema", ::SpacetimeDb::CoreType::Bytes, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |             })
      |             ~~
  318 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::OneU8Row' for 2nd argument
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:339:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::OneU16Row' for 2nd argument
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:349:5: note: candidate function not viable: no known conversion from 'const uint32_t' (aka 'const unsigned int') to 'const sdk_test_cpp::OneU32Row' for 2nd argument
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: no function template matches function template specialization 'deserialize'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::optional<unsigned int>'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::vector<unsigned int>'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'std::string' (aka 'basic_string<char>')
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'Types::uint128_t_placeholder'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'Types::int128_t_placeholder'
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:349:5: error: member reference base type 'uint32_t' (aka 'unsigned int') is not a structure or union
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:348:68: note: expanded from macro 'ONE_U32_ROW_FIELDS'
  348 | #define ONE_U32_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint32_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:350:71: error: unexpected type name 'uint32_t': expected expression
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |                                                                       ^
.\sdk_test.h:359:5: error: no matching member function for call to 'write_optional'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const uint64_t' (aka 'const unsigned long long')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: no matching member function for call to 'write_vector'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const uint64_t' (aka 'const unsigned long long')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: no matching function for call to 'serialize'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:290:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::EnumWithPayloadTag' for 2nd argument
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         SPACETIMEDB_ENUM_VARIANT("TagU8"), SPACETIMEDB_ENUM_VARIANT("TagU16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |         SPACETIMEDB_ENUM_VARIANT("TagU32"), SPACETIMEDB_ENUM_VARIANT("TagU64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |         SPACETIMEDB_ENUM_VARIANT("TagU128"), SPACETIMEDB_ENUM_VARIANT("TagU256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |         SPACETIMEDB_ENUM_VARIANT("TagI8"), SPACETIMEDB_ENUM_VARIANT("TagI16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |         SPACETIMEDB_ENUM_VARIANT("TagI32"), SPACETIMEDB_ENUM_VARIANT("TagI64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  296 |         SPACETIMEDB_ENUM_VARIANT("TagI128"), SPACETIMEDB_ENUM_VARIANT("TagI256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |         SPACETIMEDB_ENUM_VARIANT("TagBool"), SPACETIMEDB_ENUM_VARIANT("TagF32"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         SPACETIMEDB_ENUM_VARIANT("TagF64"), SPACETIMEDB_ENUM_VARIANT("TagStr"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  299 |         SPACETIMEDB_ENUM_VARIANT("TagIdentity"), SPACETIMEDB_ENUM_VARIANT("TagConnectionId"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |         SPACETIMEDB_ENUM_VARIANT("TagTimestamp"), SPACETIMEDB_ENUM_VARIANT("TagBytes"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |         SPACETIMEDB_ENUM_VARIANT("TagInts"), SPACETIMEDB_ENUM_VARIANT("TagStrings"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |         SPACETIMEDB_ENUM_VARIANT("TagSimpleEnums")
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |         }));
      |         ~~~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::EnumWithPayload' for 2nd argument
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |         sdk_test_cpp::EnumWithPayload, sdk_test_cpp_EnumWithPayload,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |         "EnumWithPayload",
      |         ~~~~~~~~~~~~~~~~~~
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |         ({
      |         ~~
  315 |             SPACETIMEDB_FIELD_CUSTOM("tag", "EnumWithPayloadTag", false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |             SPACETIMEDB_FIELD("payload_bytes_for_schema", ::SpacetimeDb::CoreType::Bytes, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |             })
      |             ~~
  318 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::OneU8Row' for 2nd argument
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:339:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::OneU16Row' for 2nd argument
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:349:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::OneU32Row' for 2nd argument
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:359:5: note: candidate function not viable: no known conversion from 'const uint64_t' (aka 'const unsigned long long') to 'const sdk_test_cpp::OneU64Row' for 2nd argument
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: no function template matches function template specialization 'deserialize'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::optional<unsigned long long>'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::vector<unsigned long long>'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'std::string' (aka 'basic_string<char>')
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'Types::uint128_t_placeholder'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: assigning to 'uint64_t' (aka 'unsigned long long') from incompatible type 'Types::int128_t_placeholder'
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:359:5: error: member reference base type 'uint64_t' (aka 'unsigned long long') is not a structure or union
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:358:68: note: expanded from macro 'ONE_U64_ROW_FIELDS'
  358 | #define ONE_U64_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, uint64_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:360:71: error: unexpected type name 'uint64_t': expected expression
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |                                                                       ^
.\sdk_test.h:366:31: error: no type named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  366 |         ::SpacetimeDb::bsatn::uint128_placeholder n;
      |         ~~~~~~~~~~~~~~~~~~~~~~^
.\sdk_test.h:369:5: error: no function template matches function template specialization 'deserialize'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:370:74: error: no member named 'uint128_placeholder' in namespace 'SpacetimeDb::bsatn'
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:9: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:368:130: note: expanded from macro 'ONE_U128_ROW_FIELDS'
  368 | #define ONE_U128_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::bsatn::uint128_placeholder, n, false, false)
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~~~
.\sdk_test.h:379:5: error: no matching member function for call to 'write_optional'
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const ::SpacetimeDb::sdk::u256_placeholder'
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no matching member function for call to 'write_vector'
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const ::SpacetimeDb::sdk::u256_placeholder'
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no matching function for call to 'serialize'
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:290:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::EnumWithPayloadTag' for 2nd argument
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         SPACETIMEDB_ENUM_VARIANT("TagU8"), SPACETIMEDB_ENUM_VARIANT("TagU16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |         SPACETIMEDB_ENUM_VARIANT("TagU32"), SPACETIMEDB_ENUM_VARIANT("TagU64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |         SPACETIMEDB_ENUM_VARIANT("TagU128"), SPACETIMEDB_ENUM_VARIANT("TagU256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |         SPACETIMEDB_ENUM_VARIANT("TagI8"), SPACETIMEDB_ENUM_VARIANT("TagI16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |         SPACETIMEDB_ENUM_VARIANT("TagI32"), SPACETIMEDB_ENUM_VARIANT("TagI64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  296 |         SPACETIMEDB_ENUM_VARIANT("TagI128"), SPACETIMEDB_ENUM_VARIANT("TagI256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |         SPACETIMEDB_ENUM_VARIANT("TagBool"), SPACETIMEDB_ENUM_VARIANT("TagF32"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         SPACETIMEDB_ENUM_VARIANT("TagF64"), SPACETIMEDB_ENUM_VARIANT("TagStr"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  299 |         SPACETIMEDB_ENUM_VARIANT("TagIdentity"), SPACETIMEDB_ENUM_VARIANT("TagConnectionId"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |         SPACETIMEDB_ENUM_VARIANT("TagTimestamp"), SPACETIMEDB_ENUM_VARIANT("TagBytes"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |         SPACETIMEDB_ENUM_VARIANT("TagInts"), SPACETIMEDB_ENUM_VARIANT("TagStrings"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |         SPACETIMEDB_ENUM_VARIANT("TagSimpleEnums")
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |         }));
      |         ~~~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::EnumWithPayload' for 2nd argument
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |         sdk_test_cpp::EnumWithPayload, sdk_test_cpp_EnumWithPayload,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |         "EnumWithPayload",
      |         ~~~~~~~~~~~~~~~~~~
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |         ({
      |         ~~
  315 |             SPACETIMEDB_FIELD_CUSTOM("tag", "EnumWithPayloadTag", false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |             SPACETIMEDB_FIELD("payload_bytes_for_schema", ::SpacetimeDb::CoreType::Bytes, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |             })
      |             ~~
  318 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::OneU8Row' for 2nd argument
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:339:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::OneU16Row' for 2nd argument
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:349:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::OneU32Row' for 2nd argument
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:359:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::OneU64Row' for 2nd argument
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:369:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::OneU128Row' for 2nd argument
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:379:5: note: candidate function not viable: no known conversion from 'const ::SpacetimeDb::sdk::u256_placeholder' to 'const sdk_test_cpp::OneU256Row' for 2nd argument
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no function template matches function template specialization 'deserialize'
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::optional<SpacetimeDb::sdk::u256_placeholder>' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:32: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |         ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::u256_placeholder>' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::vector<SpacetimeDb::sdk::u256_placeholder>' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:71:83: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   71 |         if constexpr (std::is_same_v<CPP_TYPE, uint8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u8(); } \
      |                                                            ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint8_t' (aka 'unsigned char') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:72:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   72 |         else if constexpr (std::is_same_v<CPP_TYPE, uint16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u16_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint16_t' (aka 'unsigned short') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:73:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   73 |         else if constexpr (std::is_same_v<CPP_TYPE, uint32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u32_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint32_t' (aka 'unsigned int') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:74:89: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   74 |         else if constexpr (std::is_same_v<CPP_TYPE, uint64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u64_le(); } \
      |                                                                  ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'uint64_t' (aka 'unsigned long long') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:75:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   75 |         else if constexpr (std::is_same_v<CPP_TYPE, int8_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i8(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int8_t' (aka 'signed char') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:76:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   76 |         else if constexpr (std::is_same_v<CPP_TYPE, int16_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i16_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int16_t' (aka 'short') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:77:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   77 |         else if constexpr (std::is_same_v<CPP_TYPE, int32_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i32_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int32_t' (aka 'int') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:78:88: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   78 |         else if constexpr (std::is_same_v<CPP_TYPE, int64_t>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i64_le(); } \
      |                                                                 ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'int64_t' (aka 'long long') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:79:86: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   79 |         else if constexpr (std::is_same_v<CPP_TYPE, float>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f32_le(); } \
      |                                                               ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'float' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'float' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:80:87: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   80 |         else if constexpr (std::is_same_v<CPP_TYPE, double>) { (VALUE_OBJ).FIELD_NAME = (READER).read_f64_le(); } \
      |                                                                ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'double' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'double' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:81:85: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   81 |         else if constexpr (std::is_same_v<CPP_TYPE, bool>) { (VALUE_OBJ).FIELD_NAME = (READER).read_bool(); } \
      |                                                              ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'bool' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'bool' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:92: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:124: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::uint128_t_placeholder' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: no viable overloaded '='
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:123: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                    ~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit copy assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'const u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/sdk/spacetimedb_sdk_types.h:133:16: note: candidate function (the implicit move assignment operator) not viable: no known conversion from 'Types::int128_t_placeholder' to 'u256_placeholder' for 1st argument
  133 |         struct u256_placeholder {
      |                ^~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:379:5: error: expected '(' for function-style cast or type construction
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:378:69: note: expanded from macro 'ONE_U256_ROW_FIELDS'
  378 | #define ONE_U256_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, ::SpacetimeDb::sdk::u256_placeholder, n, false, false)
      |                                                                     ^                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:93:78: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   93 |             (VALUE_OBJ).FIELD_NAME = SpacetimeDb::bsatn::deserialize<CPP_TYPE>(READER); \
      |                                                                      ~~~~~~~~^
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: no matching member function for call to 'write_optional'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int8_t' (aka 'const signed char')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: no matching member function for call to 'write_vector'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int8_t' (aka 'const signed char')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: no matching function for call to 'serialize'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:290:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::EnumWithPayloadTag' for 2nd argument
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         SPACETIMEDB_ENUM_VARIANT("TagU8"), SPACETIMEDB_ENUM_VARIANT("TagU16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |         SPACETIMEDB_ENUM_VARIANT("TagU32"), SPACETIMEDB_ENUM_VARIANT("TagU64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |         SPACETIMEDB_ENUM_VARIANT("TagU128"), SPACETIMEDB_ENUM_VARIANT("TagU256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |         SPACETIMEDB_ENUM_VARIANT("TagI8"), SPACETIMEDB_ENUM_VARIANT("TagI16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |         SPACETIMEDB_ENUM_VARIANT("TagI32"), SPACETIMEDB_ENUM_VARIANT("TagI64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  296 |         SPACETIMEDB_ENUM_VARIANT("TagI128"), SPACETIMEDB_ENUM_VARIANT("TagI256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |         SPACETIMEDB_ENUM_VARIANT("TagBool"), SPACETIMEDB_ENUM_VARIANT("TagF32"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         SPACETIMEDB_ENUM_VARIANT("TagF64"), SPACETIMEDB_ENUM_VARIANT("TagStr"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  299 |         SPACETIMEDB_ENUM_VARIANT("TagIdentity"), SPACETIMEDB_ENUM_VARIANT("TagConnectionId"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |         SPACETIMEDB_ENUM_VARIANT("TagTimestamp"), SPACETIMEDB_ENUM_VARIANT("TagBytes"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |         SPACETIMEDB_ENUM_VARIANT("TagInts"), SPACETIMEDB_ENUM_VARIANT("TagStrings"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |         SPACETIMEDB_ENUM_VARIANT("TagSimpleEnums")
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |         }));
      |         ~~~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::EnumWithPayload' for 2nd argument
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |         sdk_test_cpp::EnumWithPayload, sdk_test_cpp_EnumWithPayload,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |         "EnumWithPayload",
      |         ~~~~~~~~~~~~~~~~~~
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |         ({
      |         ~~
  315 |             SPACETIMEDB_FIELD_CUSTOM("tag", "EnumWithPayloadTag", false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |             SPACETIMEDB_FIELD("payload_bytes_for_schema", ::SpacetimeDb::CoreType::Bytes, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |             })
      |             ~~
  318 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::OneU8Row' for 2nd argument
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:339:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::OneU16Row' for 2nd argument
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:349:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::OneU32Row' for 2nd argument
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:359:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::OneU64Row' for 2nd argument
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:369:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::OneU128Row' for 2nd argument
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:379:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::OneU256Row' for 2nd argument
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:389:5: note: candidate function not viable: no known conversion from 'const int8_t' (aka 'const signed char') to 'const sdk_test_cpp::OneI8Row' for 2nd argument
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: no function template matches function template specialization 'deserialize'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::optional<signed char>'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::vector<signed char>'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'std::string' (aka 'basic_string<char>')
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'Types::uint128_t_placeholder'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: assigning to 'int8_t' (aka 'signed char') from incompatible type 'Types::int128_t_placeholder'
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:389:5: error: member reference base type 'int8_t' (aka 'signed char') is not a structure or union
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:388:67: note: expanded from macro 'ONE_I8_ROW_FIELDS'
  388 | #define ONE_I8_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int8_t, n, false, false)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:390:68: error: unexpected type name 'int8_t': expected expression
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |                                                                    ^
.\sdk_test.h:399:5: error: no matching member function for call to 'write_optional'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:58:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   58 |         (WRITER).write_optional((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:45:14: note: candidate template ignored: could not match 'const std::optional<T>' against 'const int16_t' (aka 'const short')
   45 |         void write_optional(const std::optional<T>& opt_value) { // Renamed from write_optional(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: no matching member function for call to 'write_vector'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:60:18: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   60 |         (WRITER).write_vector((VALUE_OBJ).FIELD_NAME); \
      |         ~~~~~~~~~^~~~~~~~~~~~
../../../sdk/include\spacetimedb/bsatn/writer.h:56:14: note: candidate template ignored: could not match 'const std::vector<T>' against 'const int16_t' (aka 'const short')
   56 |         void write_vector(const std::vector<T>& vec) { // Renamed from write_vector(Func)
      |              ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: no matching function for call to 'serialize'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:289:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  289 |         FIELDS_MACRO(SPACETIMEDB_XX_SERIALIZE_FIELD, writer, value); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:62:9: note: expanded from macro 'SPACETIMEDB_XX_SERIALIZE_FIELD'
   62 |         SpacetimeDb::bsatn::serialize((WRITER), (VALUE_OBJ).FIELD_NAME); \
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:47:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::SimpleEnum' for 2nd argument
   47 |     SPACETIMEDB_TYPE_ENUM(
      |     ^~~~~~~~~~~~~~~~~~~~~~
   48 |         sdk_test_cpp::SimpleEnum, sdk_test_cpp_SimpleEnum,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   49 |         "SimpleEnum",
      |         ~~~~~~~~~~~~~
   50 |         ({
      |         ~~
   51 |             SPACETIMEDB_ENUM_VARIANT("Zero"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   52 |             SPACETIMEDB_ENUM_VARIANT("One"),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   53 |             SPACETIMEDB_ENUM_VARIANT("Two")
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   54 |             })
      |             ~~
   55 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:62:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::UnitStruct' for 2nd argument
   62 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   63 |         sdk_test_cpp::UnitStruct, sdk_test_cpp_UnitStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   64 |         "UnitStruct",
      |         ~~~~~~~~~~~~~
   65 |         UNIT_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   66 |         ({ /* No fields */ })
      |         ~~~~~~~~~~~~~~~~~~~~~
   67 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:76:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::ByteStruct' for 2nd argument
   76 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |         sdk_test_cpp::ByteStruct, sdk_test_cpp_ByteStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |         "ByteStruct",
      |         ~~~~~~~~~~~~~
   79 |         BYTE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~
   80 |         ({
      |         ~~
   81 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U8, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   82 |             })
      |             ~~
   83 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:137:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::EveryPrimitiveStruct' for 2nd argument
  137 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  138 |         sdk_test_cpp::EveryPrimitiveStruct, sdk_test_cpp_EveryPrimitiveStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  139 |         "EveryPrimitiveStruct",
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  140 |         EVERY_PRIMITIVE_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  141 |         ({
      |         ~~
  142 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  143 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  144 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  145 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  146 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  148 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  149 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  150 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  151 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  152 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:210:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::EveryVecStruct' for 2nd argument
  210 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  211 |         sdk_test_cpp::EveryVecStruct, sdk_test_cpp_EveryVecStruct,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  212 |         "EveryVecStruct",
      |         ~~~~~~~~~~~~~~~~~
  213 |         EVERY_VEC_STRUCT_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  214 |         ({ // Schema describes element types. Vector nature is implicit in C++ type + X-Macro IS_VECTOR flag.
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  215 |             SPACETIMEDB_FIELD("a", ::SpacetimeDb::CoreType::U8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  216 |             SPACETIMEDB_FIELD("b", ::SpacetimeDb::CoreType::U16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  217 |             SPACETIMEDB_FIELD("c", ::SpacetimeDb::CoreType::U32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  218 |             SPACETIMEDB_FIELD("d", ::SpacetimeDb::CoreType::U64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  219 |             SPACETIMEDB_FIELD("e", ::SpacetimeDb::CoreType::U128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  220 |             SPACETIMEDB_FIELD("f", ::SpacetimeDb::CoreType::U256, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  221 |             SPACETIMEDB_FIELD("g", ::SpacetimeDb::CoreType::I8, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  222 |             SPACETIMEDB_FIELD("h", ::SpacetimeDb::CoreType::I16, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  223 |             SPACETIMEDB_FIELD("i", ::SpacetimeDb::CoreType::I32, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  224 |             SPACETIMEDB_FIELD("j", ::SpacetimeDb::CoreType::I64, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  225 |             SPACETIMEDB_FIELD("k", ::SpacetimeDb::CoreType::I128, false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:290:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::EnumWithPayloadTag' for 2nd argument
  290 |     SPACETIMEDB_TYPE_ENUM(sdk_test_cpp::EnumWithPayloadTag, sdk_test_cpp_EnumWithPayloadTag, "EnumWithPayloadTag", ({
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  291 |         SPACETIMEDB_ENUM_VARIANT("TagU8"), SPACETIMEDB_ENUM_VARIANT("TagU16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  292 |         SPACETIMEDB_ENUM_VARIANT("TagU32"), SPACETIMEDB_ENUM_VARIANT("TagU64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  293 |         SPACETIMEDB_ENUM_VARIANT("TagU128"), SPACETIMEDB_ENUM_VARIANT("TagU256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  294 |         SPACETIMEDB_ENUM_VARIANT("TagI8"), SPACETIMEDB_ENUM_VARIANT("TagI16"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  295 |         SPACETIMEDB_ENUM_VARIANT("TagI32"), SPACETIMEDB_ENUM_VARIANT("TagI64"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  296 |         SPACETIMEDB_ENUM_VARIANT("TagI128"), SPACETIMEDB_ENUM_VARIANT("TagI256"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  297 |         SPACETIMEDB_ENUM_VARIANT("TagBool"), SPACETIMEDB_ENUM_VARIANT("TagF32"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  298 |         SPACETIMEDB_ENUM_VARIANT("TagF64"), SPACETIMEDB_ENUM_VARIANT("TagStr"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  299 |         SPACETIMEDB_ENUM_VARIANT("TagIdentity"), SPACETIMEDB_ENUM_VARIANT("TagConnectionId"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  300 |         SPACETIMEDB_ENUM_VARIANT("TagTimestamp"), SPACETIMEDB_ENUM_VARIANT("TagBytes"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  301 |         SPACETIMEDB_ENUM_VARIANT("TagInts"), SPACETIMEDB_ENUM_VARIANT("TagStrings"),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  302 |         SPACETIMEDB_ENUM_VARIANT("TagSimpleEnums")
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  303 |         }));
      |         ~~~
../../../sdk/include\spacetimedb/macros.h:132:17: note: expanded from macro 'SPACETIMEDB_TYPE_ENUM'
  132 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:310:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::EnumWithPayload' for 2nd argument
  310 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  311 |         sdk_test_cpp::EnumWithPayload, sdk_test_cpp_EnumWithPayload,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  312 |         "EnumWithPayload",
      |         ~~~~~~~~~~~~~~~~~~
  313 |         ENUM_WITH_PAYLOAD_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  314 |         ({
      |         ~~
  315 |             SPACETIMEDB_FIELD_CUSTOM("tag", "EnumWithPayloadTag", false, false),
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  316 |             SPACETIMEDB_FIELD("payload_bytes_for_schema", ::SpacetimeDb::CoreType::Bytes, false, false)
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  317 |             })
      |             ~~
  318 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:329:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneU8Row' for 2nd argument
  329 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  330 |         sdk_test_cpp::OneU8Row, sdk_test_cpp_OneU8Row, "OneU8Row", ONE_U8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  331 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  332 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:339:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneU16Row' for 2nd argument
  339 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  340 |         sdk_test_cpp::OneU16Row, sdk_test_cpp_OneU16Row, "OneU16Row", ONE_U16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  341 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  342 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:349:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneU32Row' for 2nd argument
  349 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  350 |         sdk_test_cpp::OneU32Row, sdk_test_cpp_OneU32Row, "OneU32Row", ONE_U32_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  351 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U32, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  352 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:359:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneU64Row' for 2nd argument
  359 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  360 |         sdk_test_cpp::OneU64Row, sdk_test_cpp_OneU64Row, "OneU64Row", ONE_U64_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  361 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U64, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  362 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:369:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneU128Row' for 2nd argument
  369 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  370 |         sdk_test_cpp::OneU128Row, sdk_test_cpp_OneU128Row, "OneU128Row", ONE_U128_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  371 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U128, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  372 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:379:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneU256Row' for 2nd argument
  379 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  380 |         sdk_test_cpp::OneU256Row, sdk_test_cpp_OneU256Row, "OneU256Row", ONE_U256_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  381 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::U256, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  382 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:389:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneI8Row' for 2nd argument
  389 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  390 |         sdk_test_cpp::OneI8Row, sdk_test_cpp_OneI8Row, "OneI8Row", ONE_I8_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  391 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I8, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  392 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:399:5: note: candidate function not viable: no known conversion from 'const int16_t' (aka 'const short') to 'const sdk_test_cpp::OneI16Row' for 2nd argument
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:288:17: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  288 |     inline void serialize(::SpacetimeDb::bsatn::Writer& writer, const CppTypeName& value) { \
      |                 ^                                               ~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: no function template matches function template specialization 'deserialize'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^
../../../sdk/include\spacetimedb/macros.h:292:24: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  292 |     inline CppTypeName deserialize<CppTypeName>(::SpacetimeDb::bsatn::Reader& reader) { \
      |                        ^
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::optional<short>'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:67:43: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   67 |         (VALUE_OBJ).FIELD_NAME = (READER).read_optional<CPP_TYPE>(); \
      |                                  ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::vector<short>'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:69:34: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   69 |         (VALUE_OBJ).FIELD_NAME = (READER).read_vector<CPP_TYPE>(); \
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'std::string' (aka 'basic_string<char>')
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:82:94: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   82 |         else if constexpr (std::is_same_v<CPP_TYPE, std::string>) { (VALUE_OBJ).FIELD_NAME = (READER).read_string(); } \
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:84:108: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   84 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Identity>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                      ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:85:109: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   85 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::Timestamp>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                       ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'Types::uint128_t_placeholder'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:86:135: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   86 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::uint128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_u128_le(); } \
      |                                                                                                                              ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: assigning to 'int16_t' (aka 'short') from incompatible type 'Types::int128_t_placeholder'
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:87:134: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   87 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::Types::int128_t_placeholder>) { (VALUE_OBJ).FIELD_NAME = (READER).read_i128_le(); } \
      |                                                                                                                             ~~~~~~~~~^~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:88:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   88 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::u256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
In file included from sdk_test.cpp:1:
.\sdk_test.h:399:5: error: member reference base type 'int16_t' (aka 'short') is not a structure or union
  399 |     SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS(
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  400 |         sdk_test_cpp::OneI16Row, sdk_test_cpp_OneI16Row, "OneI16Row", ONE_I16_ROW_FIELDS,
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  401 |         ({ SPACETIMEDB_FIELD("n", ::SpacetimeDb::CoreType::I16, false, false) })
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  402 |     );
      |     ~
../../../sdk/include\spacetimedb/macros.h:294:22: note: expanded from macro 'SPACETIMEDB_TYPE_STRUCT_WITH_FIELDS'
  294 |         FIELDS_MACRO(SPACETIMEDB_XX_DESERIALIZE_FIELD, reader, obj); \
      |         ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\sdk_test.h:398:68: note: expanded from macro 'ONE_I16_ROW_FIELDS'
  398 | #define ONE_I16_ROW_FIELDS(ACTION, WRITER_OR_READER, VALUE_OR_OBJ) ACTION(WRITER_OR_READER, VALUE_OR_OBJ, int16_t, n, false, false)
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../sdk/include\spacetimedb/macros.h:89:116: note: expanded from macro 'SPACETIMEDB_XX_DESERIALIZE_FIELD'
   89 |         else if constexpr (std::is_same_v<CPP_TYPE, ::SpacetimeDb::sdk::i256_placeholder>) { (VALUE_OBJ).FIELD_NAME.bsatn_deserialize(READER); } \
      |                                                                                              ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
1000 errors generated.
emcc: error: ''C:/Users/ludvi/emsdk/upstream/bin\clang.exe' -target wasm32-unknown-emscripten -fignore-exceptions -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr '--sysroot=C:\Users\ludvi\emsdk\upstream\emscripten\cache\sysroot' -DEMSCRIPTEN -Xclang '-iwithsysroot/include\fakesdl' -Xclang '-iwithsysroot/include\compat' -std=c++20 -I../../../sdk/include -ferror-limit=999 -c sdk_test.cpp -o 'C:\Users\ludvi\AppData\Local\Temp\emscripten_temp_p6ijzp0p\sdk_test_0.o'' failed (returned 1)
